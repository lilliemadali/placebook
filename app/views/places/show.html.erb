<!DOCTYPE html>
<html>
    <head>
        <title>AboutPoint</title>
        <% latlong = Geocoder.coordinates(@place.full_street_address) %>
        <style type="text/css">
            /* Set a size for our map container, the Google Map will take up 100% of this container */
            #map {
                height: 300px;
            }
        </style>
        
        <!-- 
            You need to include this script tag on any page that has a Google Map.

            The following script tag will work when opening this example locally on your computer.
            But if you use this on a localhost server or a live website you will need to include an API key. 
            Sign up for one here (it's free for small usage): 
                https://developers.google.com/maps/documentation/javascript/tutorial#api_key

            After you sign up, use the following script tag with YOUR_GOOGLE_API_KEY replaced with your actual key.
                <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_API_KEY"></script>
        -->
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBt9uvtviwcSxQINVmdGbDruBXW314THwc"></script>
        
        <script type="text/javascript">
            // When the window has finished loading create our google map below
            google.maps.event.addDomListener(window, 'load', init);
        
            function init() {
                // Basic options for a simple Google Map
                // For more options see: https://developers.google.com/maps/documentation/javascript/reference#MapOptions
                var mapOptions = {
                    // How zoomed in you want the map to start at (always required)
                    zoom: 11,

                    // The latitude and longitude to center the map (always required)
                    center: new google.maps.LatLng(latlong), // New York

                    // How you would like to style the map. 
                    // This is where you would paste any style found on Snazzy Maps.
                    styles: [{"featureType":"administrative","elementType":"all","stylers":[{"visibility":"on"},{"lightness":33}]},{"featureType":"landscape","elementType":"all","stylers":[{"color":"#f2e5d4"}]},{"featureType":"poi.park","elementType":"geometry","stylers":[{"color":"#c5dac6"}]},{"featureType":"poi.park","elementType":"labels","stylers":[{"visibility":"on"},{"lightness":20}]},{"featureType":"road","elementType":"all","stylers":[{"lightness":20}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"color":"#c5c6c6"}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#e4d7c6"}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#fbfaf7"}]},{"featureType":"water","elementType":"all","stylers":[{"visibility":"on"},{"color":"#acbcc9"}]}]
                };

                // Get the HTML DOM element that will contain your map 
                // We are using a div with id="map" seen below in the <body>
                var mapElement = document.getElementById('map');

                // Create the Google Map using our element and options defined above
                var map = new google.maps.Map(mapElement, mapOptions);

                // Let's also add a marker while we're at it
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(latlong),
                    map: map,
                });
            }
        </script>
    </head>

<br>
<div class="container">
<%= render 'nav' %>

<p id="notice"><%= notice %></p>

<div class="panel panel-default">
  <!-- Default panel contents -->
  <div class="panel-heading">About Point</div>
  <div class="panel-body">
  <div id="map"></div>
  </div>

  <!-- Table -->
  <table class="table">
		<TR>
		   <TD><strong>Address</strong></TD>
		   <TD><strong>Latitude, Longitude</strong></TD>
		   <TD><strong>Within CNI District?</strong></TD></TR>
		<TR>
		   <TD><%= @place.full_street_address %></TD>
		   <TD><% latlong = Geocoder.coordinates(@place.full_street_address) %>
		   		<%= latlong %>
		   </TD>
		   <TD>
				<% kml_file = open("CNI.kml") %>
				<% region = BorderPatrol.parse_kml(kml_file) %>
				<% userpt = BorderPatrol::Point.new(latlong) %>
				<%= region.contains_point?(userpt) %>
		   </TD></TR>
  </table>
</div>

<p align="center">
<%= link_to 'New Place', new_place_path %> | 
<%= link_to 'Back', places_path %>
</p>
</div>